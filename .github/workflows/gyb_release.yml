name: GYB Release

on:
  repository_dispatch:
    types: [gyb-release]
  workflow_dispatch:
    inputs:
      tag:
        description: 'GYB Release Tag'

jobs:
  build-and-push:
    name: Build and push docker image
    runs-on: ubuntu-latest
    steps: 
      -
        name: Check GYB release info
        id: release_info
        run: |
          [ -z "${{ github.event.client_payload.tag }}" ] && tag="${{ github.event.inputs.tag }}" || tag="${{ github.event.client_payload.tag }}"
          [ -z "$tag" ] && { echo "ERROR: No tag passed to workflow'" >&2 && exit 1; }
          echo "::set-output name=tag::$tag"

          latest=$(curl -sX GET https://api.github.com/repos/jay0lee/got-your-back/releases/latest \
          | jq -r '.tag_name')
          [ "$latest" == "$tag" ] && islatest="true" || islatest="false"
          echo "::set-output name=islatest::$islatest" 

          echo -e "tag: $tag\nisLatest: $islatest"
      - 
        name: Checkout
        uses: actions/checkout@v2
      #-
      #  name: Login to GHCR
      #  uses: docker/login-action@v1
      #  with:
      #    registry: ghcr.io
      #    username: ${{ github.repository_owner }}
      #    password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Container metadata
        id: metadata
        uses: docker/metadata-action@v3
        with:
          images: |
            awbn/gyb
          #  ghcr.io/awbn/gyb
          flavor: |
            latest=${{ steps.release_info.outputs.islatest }}
          tags: |
            type=match,pattern=v(.*),group=1,value=${{ steps.release_info.outputs.tag }}
      - 
        name: Set up QEMU for x-platform
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: GYB_VERSION=${{ steps.release_info.outputs.tag }}
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ steps.metadata.outputs.tags }}

schemaVersion: 2.0.0

fileExistenceTests:
  - name: GYB Src
    path: /app/src/gyb.py
    shouldExist: true
  - name: GYB wrapper
    path: /app/gyb
    shouldExist: true
  - name: Config directory
    path: /config
    shouldExist: true
  - name: Container init
    path: /etc/s6-overlay/s6-rc.d/init-gyb/run
    shouldExist: true
  - name: crond
    path: /etc/s6-overlay/s6-rc.d/svc-cron/run
    shouldExist: true
  
metadataTest:
  envVars:
    - key: JOB_FULL_CMD
      value: '/app/gyb --action backup'
    - key: JOB_INC_CMD
      value: '/app/gyb --action backup --search "newer_than:3d"'
    - key: JOB_EXTRA_CMD
      value: ''
    - key: CONFIG_DIR
      value: '/config'
    - key: DEST_DIR
      value: '/config/data'
  volumes: ["/config"]
  entrypoint: ["/init"]
  exposedPorts: []

commandTests:
  - name: Generated files check
    setup: [["/init","true"]]
    command: bash
    args:
      - -c
      - |
        [ -f /etc/crontabs/abc ] || echo crontabs file missing &&
        [ -f /app/src/nobrowser.txt ] || echo nobrowser file missing &&
        [ -f /etc/ssmtp/ssmtp.conf ] || echo ssmtp file missing
    excludedOutput: [".*crontabs file missing.*|.*nobrowser file missing.*|.*ssmtp file missing.*"]
  
  - name: Cron schedule properly generated
    setup: [["/init","true"]]
    envVars:
      - key: 'JOB_EXTRA_CRON'
        value: '* * * * *'
      - key: JOB_EXTRA_CMD
        value: "foo/bar/baz"
      - key: NOCRON
        value: 1
    command: bash
    args:
      - -c
      - grep "foo/bar/baz" /etc/crontabs/abc
    expectedOutput: ["\\* \\* \\* \\* \\*  foo/bar/baz  2\\>\\&1"]
  
  - name: GYB Wrapper script
    setup: [["/init","true"]]
    envVars:
      - key: EMAIL
        value: example@gmail.com
      - key: NOCRON
        value: 1
    command: bash
    args:
      - -c
      - /app/gyb --version
    expectedOutput: [".*\\[Running\\] python3 /app/src/gyb.py --version --email example@gmail.com.*"]
  
  - name: Send mail on error
    setup: [["/init","true"]]
    envVars:
      - key: MAIL_FROM
        value: "foo@gmail.com"
      - key: MAIL_TO
        value: "bar@gmail.com"
      - key: JOB_FULL_CRON
        value: " "
      - key: JOB_FULL_CMD
        value: "/app/gyb"
      - key: JOB_INC_CRON
        value: " "
      - key: JOB_INC_CMD
        value: "true"
      - key: NOCRON
        value: 1
    command: bash
    args:
      - -c
      - |
        sed -i "s/sendmail -t <<-EOF/cat <<-EOF > \/tmp\/mail.out/g" /app/mailonerror &&
        sed -i '1s/^/#!\/usr\/bin\/with-contenv bash \n/' /etc/crontabs/abc &&
        chmod +x /etc/crontabs/abc &&
        /etc/crontabs/abc &> /dev/null &&
        echo "*** Error mail content: ***" &&
        cat /tmp/mail.out &&
        echo "*** End Error mail content ***"
    expectedOutput: [".*From: foo@gmail.com\nTo: bar@gmail.com\nSubject: Error running Got Your Back job*."]
  
  - name: Log to file
    setup: [["/init","true"]]
    envVars:
      - key: LOG_FILE
        value: /tmp/gyb.log
      - key: JOB_FULL_CRON
        value: " "
      - key: JOB_FULL_CMD
        value: "/app/gyb --short-version"
      - key: JOB_INC_CRON
        value: " "
      - key: JOB_INC_CMD
        value: "true"
      - key: NOCRON
        value: 1
    command: bash
    args:
      - -c
      - |
        sed -i '1s/^/#!\/usr\/bin\/with-contenv bash \n/' /etc/crontabs/abc &&
        chmod +x /etc/crontabs/abc &&
        /etc/crontabs/abc &> /dev/null &&
        echo "*** Log file content: ***" &&
        cat /tmp/gyb.log &&
        echo "*** End log file content ***"
    expectedOutput: ["\\[.*\\] [0-9]+\\.[0-9]+"]

  - name: Log to file AND mail on error
    setup: [["/init","true"]]
    envVars:
      - key: MAIL_FROM
        value: "foo@gmail.com"
      - key: MAIL_TO
        value: "bar@gmail.com"
      - key: LOG_FILE
        value: /tmp/gyb.log
      - key: JOB_FULL_CRON
        value: " "
      - key: JOB_FULL_CMD
        value: "/app/gyb"
      - key: JOB_INC_CRON
        value: " "
      - key: JOB_INC_CMD
        value: "true"
      - key: NOCRON
        value: 1
    command: bash
    args:
      - -c
      - |
        sed -i "s/sendmail -t <<-EOF/cat <<-EOF > \/tmp\/mail.out/g" /app/mailonerror &&
        sed -i '1s/^/#!\/usr\/bin\/with-contenv bash \n/' /etc/crontabs/abc &&
        chmod +x /etc/crontabs/abc &&
        /etc/crontabs/abc &> /dev/null &&
        grep -q "\[.*\] ERROR: --email is required" /tmp/gyb.log || echo "Missing log file entry" &&
        grep -q "From: foo@gmail.com" /tmp/mail.out || echo "Missing mail file entry"
    excludedOutput: [".*Missing log file entry.*|.*Missing mail file entry.*"]
  
  - name: File Permissions
    setup: [["/init","true"]]
    envVars:
      - key: EMAIL
        value: example@gmail.com
      - key: NOCRON
        value: 1
      - key: CONFIG_DIR
        value: /tmp
    command: bash
    args: 
      - -c
      - | 
        /app/gyb --version > /dev/null &&
        stat -c "%a" /tmp/lastcheck.txt
    expectedOutput: ["600"]

  - name: Crond starts 
    setup: [["/init","true"]]
    command: bash
    args: 
      - -c
      - grep -q "\[Cron\] Starting crond" /var/log/svc-cron-init
 
  - name: Crond can be skipped
    setup: [["/init","true"]]
    command: bash
    envVars:
      - key: NOCRON
        value: 1
    args: 
      - -c
      - grep -q "\[Cron\] Starting crond" /var/log/svc-cron-init || echo "No crond"
    expectedOutput: [".*No crond.*"]

# Env variable loading workaround
containerRunOptions:
  envVars:
    - PLACEHOLDER